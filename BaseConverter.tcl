#############################################################################
# Generated by PAGE version 4.9
# in conjunction with Tcl version 8.6
set vTcl(timestamp) ""


set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #d8d8d8
set vTcl(active_menu_fg) #000000
#############################################################################
# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family {Rockwell Extra Bold} -size 18 -weight bold -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font10
vTcl:font:add_font \
    "-family {Rockwell Extra Bold} -size 14 -weight bold -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font9
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top37
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# USER DEFINED PROCEDURES
#

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top37 {base} {
    if {$base == ""} {
        set base .top37
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#808080} -highlightbackground {#d9d9d9} \
        -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 1080x600+512+243
    update
    # set in toplevel.wgt.
    global vTcl
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 3836 1054
    wm minsize $top 116 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "BaseConverter"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    ttk::style configure TCombobox -background #d9d9d9
    ttk::style configure TCombobox -foreground #000000
    ttk::style configure TCombobox -font TkDefaultFont
    ttk::combobox $top.cpd49 \
        -font $::vTcl(fonts,vTcl:font9,object) -textvariable combobox \
        -foreground {} -background {} -takefocus {} 
    vTcl:DefineAlias "$top.cpd49" "TCombobox2" vTcl:WidgetProc "Toplevel1" 1
    ttk::combobox $top.cpd50 \
        -font $::vTcl(fonts,vTcl:font9,object) -textvariable combobox \
        -foreground {} -background {} -takefocus {} 
    vTcl:DefineAlias "$top.cpd50" "TCombobox1" vTcl:WidgetProc "Toplevel1" 1
    label $top.cpd51 \
        -activebackground gray -activeforeground black -background gray \
        -disabledforeground {#a3a3a3} -font $::vTcl(fonts,vTcl:font10,object) \
        -foreground {#000000} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text {Base :} 
    vTcl:DefineAlias "$top.cpd51" "Label1" vTcl:WidgetProc "Toplevel1" 1
    label $top.cpd53 \
        -activebackground gray -activeforeground black -background gray \
        -disabledforeground {#a3a3a3} -font $::vTcl(fonts,vTcl:font10,object) \
        -foreground {#000000} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text {Base :} 
    vTcl:DefineAlias "$top.cpd53" "Label2" vTcl:WidgetProc "Toplevel1" 1
    button $top.but37 \
        -activebackground {#d9d9d9} -activeforeground {#000000} \
        -background {#d9d9d9} -disabledforeground {#a3a3a3} \
        -font $::vTcl(fonts,vTcl:font10,object) -foreground {#000000} \
        -highlightbackground {#d9d9d9} -highlightcolor black -pady 0 \
        -text Convert 
    vTcl:DefineAlias "$top.but37" "Button1" vTcl:WidgetProc "Toplevel1" 1
    text $top.cpd38 \
        -background white -font $::vTcl(fonts,vTcl:font10,object) \
        -foreground black -height 174 -highlightbackground {#d9d9d9} \
        -highlightcolor black -insertbackground black \
        -selectbackground {#c4c4c4} -selectforeground black -undo 1 \
        -width 380 -wrap word 
    .top37.cpd38 configure -font font10
    .top37.cpd38 insert end text
    vTcl:DefineAlias "$top.cpd38" "Text1" vTcl:WidgetProc "Toplevel1" 1
    text $top.cpd39 \
        -background white -font $::vTcl(fonts,vTcl:font10,object) \
        -foreground black -height 174 -highlightbackground {#d9d9d9} \
        -highlightcolor black -insertbackground black \
        -selectbackground {#c4c4c4} -selectforeground black -undo 1 \
        -width 380 -wrap word 
    .top37.cpd39 configure -font font10
    .top37.cpd39 insert end text
    vTcl:DefineAlias "$top.cpd39" "Text2" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.cpd49 \
        -in $top -x 800 -y 350 -width 130 -height 30 -anchor nw \
        -bordermode inside 
    place $top.cpd50 \
        -in $top -x 270 -y 350 -width 130 -relwidth 0 -height 30 -relheight 0 \
        -anchor nw -bordermode inside 
    place $top.cpd51 \
        -in $top -x 140 -y 350 -width 100 -height 30 -anchor nw \
        -bordermode inside 
    place $top.cpd53 \
        -in $top -x 680 -y 350 -width 86 -height 31 -anchor nw \
        -bordermode inside 
    place $top.but37 \
        -in $top -x 470 -y 450 -width 140 -relwidth 0 -height 50 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.cpd38 \
        -in $top -x 80 -y 90 -width 380 -height 180 -anchor nw \
        -bordermode inside 
    place $top.cpd39 \
        -in $top -x 620 -y 90 -width 380 -height 180 -anchor nw \
        -bordermode inside 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

Window show .
Window show .top37

